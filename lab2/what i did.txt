INSERTION SORT
Insertion sort is based on the idea that one element from the input elements is consumed in each iteration to find its correct position 
i.e, the position to which it belongs in a sorted array.
It iterates the input elements by growing the sorted array at each iteration. It compares the current element with the largest value in the sorted array. If the current element is greater, 
then it leaves the element in its place and moves on to the next element else it finds its correct position in the sorted array and moves it to that position. This is done by shifting all the elements, which are larger than the current element, 
in the sorted array to one position ahead
MERGE SORT

Merge sort is a divide-and-conquer algorithm based on the idea of breaking down a list into several sub-lists until 
each sublist consists of a single element and merging those sublists in a manner that results into a sorted list.

Idea:

Divide the unsorted list into  sublists, each containing  element.
Take adjacent pairs of two singleton lists and merge them to form a list of 2 elements. 
It will now convert into  lists of size 2.
Repeat the process till a single sorted list of obtained.
While comparing two sublists for merging, the first element of both lists is taken into consideration.
While sorting in ascending order, the element that is of a lesser value becomes a new element of the sorted list. 
This procedure is repeated until both the smaller sublists are empty and the new combined sublist comprises
all the elements of both the sublists.